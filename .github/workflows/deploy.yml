name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build applications
        run: pnpm run build

      - name: Deploy to staging
        run: |
          echo "🚀 Deploying to staging environment..."
          echo "Environment: ${{ env.NODE_ENV }}"
          # 여기에 실제 스테이징 배포 로직 추가

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build applications
        run: pnpm run build

      - name: Deploy to production
        run: |
          echo "🚀 Deploying to production environment..."
          echo "Environment: ${{ env.NODE_ENV }}"
          # 여기에 실제 프로덕션 배포 로직 추가

      - name: Notify deployment success
        run: |
          echo "✅ Production deployment completed successfully!"
          # 여기에 배포 성공 알림 로직 추가
