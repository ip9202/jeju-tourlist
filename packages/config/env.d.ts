import { z } from "zod";
declare const envSchema: z.ZodObject<{
    NODE_ENV: z.ZodEnum<{
        development: "development";
        staging: "staging";
        production: "production";
    }>;
    DATABASE_URL: z.ZodString;
    NEXTAUTH_SECRET: z.ZodString;
    API_BASE_URL: z.ZodDefault<z.ZodString>;
    SOCKET_URL: z.ZodDefault<z.ZodString>;
    SOCKET_PORT: z.ZodDefault<z.ZodString>;
    LOG_LEVEL: z.ZodDefault<z.ZodEnum<{
        error: "error";
        debug: "debug";
        info: "info";
        warn: "warn";
    }>>;
    REDIS_URL: z.ZodDefault<z.ZodString>;
    REDIS_HOST: z.ZodDefault<z.ZodString>;
    REDIS_PORT: z.ZodDefault<z.ZodString>;
    REDIS_PASSWORD: z.ZodOptional<z.ZodString>;
    REDIS_DB: z.ZodDefault<z.ZodString>;
    KAKAO_CLIENT_ID: z.ZodOptional<z.ZodString>;
    KAKAO_CLIENT_SECRET: z.ZodOptional<z.ZodString>;
    NAVER_CLIENT_ID: z.ZodOptional<z.ZodString>;
    NAVER_CLIENT_SECRET: z.ZodOptional<z.ZodString>;
    GOOGLE_CLIENT_ID: z.ZodOptional<z.ZodString>;
    GOOGLE_CLIENT_SECRET: z.ZodOptional<z.ZodString>;
    NEXTAUTH_URL: z.ZodDefault<z.ZodString>;
    NEXT_PUBLIC_API_BASE_URL: z.ZodDefault<z.ZodString>;
    AWS_ACCESS_KEY_ID: z.ZodOptional<z.ZodString>;
    AWS_SECRET_ACCESS_KEY: z.ZodOptional<z.ZodString>;
    AWS_REGION: z.ZodDefault<z.ZodString>;
    S3_BUCKET_NAME: z.ZodOptional<z.ZodString>;
    KAKAO_MAP_API_KEY: z.ZodOptional<z.ZodString>;
    SENDGRID_API_KEY: z.ZodOptional<z.ZodString>;
    FIREBASE_PROJECT_ID: z.ZodOptional<z.ZodString>;
    SENTRY_DSN: z.ZodOptional<z.ZodString>;
    RATE_LIMIT_REQUESTS: z.ZodDefault<z.ZodPipe<z.ZodString, z.ZodTransform<number, string>>>;
    RATE_LIMIT_WINDOW: z.ZodDefault<z.ZodPipe<z.ZodString, z.ZodTransform<number, string>>>;
    SESSION_TIMEOUT: z.ZodDefault<z.ZodPipe<z.ZodString, z.ZodTransform<number, string>>>;
}, z.core.$strip>;
export declare const env: {
    NODE_ENV: "development" | "staging" | "production";
    DATABASE_URL: string;
    NEXTAUTH_SECRET: string;
    API_BASE_URL: string;
    SOCKET_URL: string;
    SOCKET_PORT: string;
    LOG_LEVEL: "error" | "debug" | "info" | "warn";
    REDIS_URL: string;
    REDIS_HOST: string;
    REDIS_PORT: string;
    REDIS_DB: string;
    NEXTAUTH_URL: string;
    NEXT_PUBLIC_API_BASE_URL: string;
    AWS_REGION: string;
    RATE_LIMIT_REQUESTS: number;
    RATE_LIMIT_WINDOW: number;
    SESSION_TIMEOUT: number;
    REDIS_PASSWORD?: string | undefined;
    KAKAO_CLIENT_ID?: string | undefined;
    KAKAO_CLIENT_SECRET?: string | undefined;
    NAVER_CLIENT_ID?: string | undefined;
    NAVER_CLIENT_SECRET?: string | undefined;
    GOOGLE_CLIENT_ID?: string | undefined;
    GOOGLE_CLIENT_SECRET?: string | undefined;
    AWS_ACCESS_KEY_ID?: string | undefined;
    AWS_SECRET_ACCESS_KEY?: string | undefined;
    S3_BUCKET_NAME?: string | undefined;
    KAKAO_MAP_API_KEY?: string | undefined;
    SENDGRID_API_KEY?: string | undefined;
    FIREBASE_PROJECT_ID?: string | undefined;
    SENTRY_DSN?: string | undefined;
};
export type Env = z.infer<typeof envSchema>;
export declare const isDevelopment: boolean;
export declare const isStaging: boolean;
export declare const isProduction: boolean;
export declare function validateEnv(): {
    success: boolean;
    error: unknown;
};
export {};
//# sourceMappingURL=env.d.ts.map